#In this project we are going to be working with computer vision,
#using OpenCv library, and we are going to create a web cam application, 
# that can click a picture using our laptops web cam,
# and save it into our image file

#command: pip install opencv-python
# This installs the OpenCV library for Python,
# which is used for computer vision tasks

import cv2
# Importing the OpenCV library

imgcapture = cv2.VideoCapture(0)
# Capturing video input from the webcam 
# (device 0 is usually the default camera)

result = True
# A flag variable to control the image capture process

while(result):
# Starts a loop that will run until an image is captured

    ret, frame = imgcapture.read()
    # Capture a single frame/image from the webcam 
    # (ret is a return value, frame is the image)
    #imgcapture.read(): This function captures a frame from the webcam.
    #read() captures the current frame from the webcam.
    #ret: This is a boolean variable. It returns True if the frame is read successfully
    # (i.e., the webcam is functioning and has captured an image), 
    # and False if the capture fails.
    #frame: This is the actual image/frame captured by the webcam.
    # It's stored as a NumPy array, 
    # which can be processed, saved, or displayed using OpenCV functions.
    
    
    cv2.imwrite("test2.jpg",frame)
    # Saving the captured image to a file called 'test2.jpg'
    #cv2.imwrite(): This function is used to save an image to a file.
    # The file will be saved in the current working directory.
    
    
    result = False
    # After saving the image, set result to False to stop the loop
    
    print("Image Captured...")
    # Notify the user that the image has been successfully captured.
    
    
imgcapture.release()
#imgcapture.release():
#imgcapture is the object created using cv2.VideoCapture(0), which accesses the webcam.
#The release() function frees the webcam resource.
# When a program interacts with hardware like a webcam, it locks or reserves the hardware for its exclusive use.
#Releasing the webcam ensures that the hardware is properly closed and available for other applications or future use.
#so, Without calling release(), 
# the webcam may stay in a "busy" state, 
# which could prevent other programs from accessing it, 
# or it may keep running in the background.
